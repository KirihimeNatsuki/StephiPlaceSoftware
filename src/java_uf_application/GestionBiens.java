package java_uf_application;

import java.awt.Color;
import java.sql.Date;
import java.sql.Timestamp;
import javafx.scene.layout.Border;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.MatteBorder;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author enzol
 */
public class GestionBiens extends javax.swing.JFrame {

    /**
     * Creates new form GestionBiens
     */
    BIENS biens = new BIENS();
    public GestionBiens() {
        initComponents();
        
        MatteBorder button_border = BorderFactory.createMatteBorder(3, 3, 3, 3, new Color(255,255,255));
        jButtonAddBiens.setBorder(button_border);
        jButtonEditBiens.setBorder(button_border);
        jButtonSupprBiens.setBorder(button_border);
        jButtonClearField1.setBorder(button_border);
        jButtonRefreshJTable1.setBorder(button_border);
        
        biens.fillBiensJTable(jTableBiens);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldIDBiens = new javax.swing.JTextField();
        jTextFieldNomBiens = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldLieu = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldPrix = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableBiens = new javax.swing.JTable();
        jButtonAddBiens = new javax.swing.JButton();
        jButtonEditBiens = new javax.swing.JButton();
        jButtonSupprBiens = new javax.swing.JButton();
        jButtonClearField1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jButtonRefreshJTable1 = new javax.swing.JButton();
        jTextFieldSurface = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaDescriptionBiens = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldIDClient1 = new javax.swing.JTextField();
        jComboBoxType = new javax.swing.JComboBox<>();
        jSpinnerPieces = new javax.swing.JSpinner();
        jCheckBox_Jardin = new javax.swing.JCheckBox();
        jCheckBox_Cave = new javax.swing.JCheckBox();
        jCheckBox_Garage = new javax.swing.JCheckBox();
        jCheckBox_Piscine = new javax.swing.JCheckBox();
        jCheckBox_Vendu = new javax.swing.JCheckBox();
        jCheckBox_Annonce = new javax.swing.JCheckBox();
        jTextFieldIDAgent = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel7.setBackground(new java.awt.Color(42, 62, 80));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("ID_Vendeur :");

        jTextFieldIDBiens.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jTextFieldNomBiens.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Nom :");

        jTextFieldLieu.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Lieu/adresse :");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Type :");

        jTextFieldPrix.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("Description :");

        jTableBiens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "ID_Vendeur", "ID_Agent", "Nom", "Lieu", "Type", "Description",
                "Prix", "Surface", "Nb_Pièces", "Jardin", "Garage", "Cave", "Piscine",
                "Vendu", "Annoncé",
            }
        )
        {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        }

    );
    jTableBiens.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTableBiensMouseClicked(evt);
        }
    });
    jScrollPane1.setViewportView(jTableBiens);

    jButtonAddBiens.setBackground(new java.awt.Color(0, 153, 51));
    jButtonAddBiens.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
    jButtonAddBiens.setText("Ajouter un nouveau bien");
    jButtonAddBiens.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jButtonAddBiens.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonAddBiensActionPerformed(evt);
        }
    });

    jButtonEditBiens.setBackground(new java.awt.Color(255, 255, 0));
    jButtonEditBiens.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
    jButtonEditBiens.setText("Modifier un bien");
    jButtonEditBiens.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jButtonEditBiens.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonEditBiensActionPerformed(evt);
        }
    });

    jButtonSupprBiens.setBackground(new java.awt.Color(204, 0, 0));
    jButtonSupprBiens.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
    jButtonSupprBiens.setText("Supprimer un bien");
    jButtonSupprBiens.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jButtonSupprBiens.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonSupprBiensActionPerformed(evt);
        }
    });

    jButtonClearField1.setBackground(new java.awt.Color(51, 51, 255));
    jButtonClearField1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
    jButtonClearField1.setText("Effacer les champs");
    jButtonClearField1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jButtonClearField1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonClearField1ActionPerformed(evt);
        }
    });

    jLabel9.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
    jLabel9.setForeground(new java.awt.Color(255, 255, 255));
    jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel9.setText("Prix (€) :");

    jButtonRefreshJTable1.setBackground(new java.awt.Color(51, 51, 255));
    jButtonRefreshJTable1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
    jButtonRefreshJTable1.setText("Refresh");
    jButtonRefreshJTable1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonRefreshJTable1ActionPerformed(evt);
        }
    });

    jTextFieldSurface.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

    jLabel10.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
    jLabel10.setForeground(new java.awt.Color(255, 255, 255));
    jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel10.setText("Surface/Superficie (m²) :");

    jLabel12.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
    jLabel12.setForeground(new java.awt.Color(255, 255, 255));
    jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel12.setText("Nombre de pièces :");

    jTextAreaDescriptionBiens.setColumns(20);
    jTextAreaDescriptionBiens.setRows(5);
    jScrollPane2.setViewportView(jTextAreaDescriptionBiens);

    jLabel11.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
    jLabel11.setForeground(new java.awt.Color(255, 255, 255));
    jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel11.setText("ID_Bien :");

    jTextFieldIDClient1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

    jComboBoxType.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    jComboBoxType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Maison", "Appartement", "Studio", "Chateau", "Villa", "Magasin", "Autres" }));

    jSpinnerPieces.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    jSpinnerPieces.setModel(new javax.swing.SpinnerNumberModel(1, 1, 50, 1));

    jCheckBox_Jardin.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    jCheckBox_Jardin.setText("Jardin ?");

    jCheckBox_Cave.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    jCheckBox_Cave.setText("Cave ?");

    jCheckBox_Garage.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    jCheckBox_Garage.setText("Garage ?");

    jCheckBox_Piscine.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    jCheckBox_Piscine.setText("Piscine ?");

    jCheckBox_Vendu.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    jCheckBox_Vendu.setText("Vendu ?");

    jCheckBox_Annonce.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    jCheckBox_Annonce.setText("Annoncé ?");

    jTextFieldIDAgent.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

    jLabel13.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
    jLabel13.setForeground(new java.awt.Color(255, 255, 255));
    jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel13.setText("ID_Agent :");

    javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
    jPanel7.setLayout(jPanel7Layout);
    jPanel7Layout.setHorizontalGroup(
        jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel7Layout.createSequentialGroup()
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel7Layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                            .addComponent(jLabel10)
                                            .addGap(12, 12, 12))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                            .addComponent(jLabel12)
                                            .addGap(18, 18, 18)))
                                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jTextFieldSurface, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jSpinnerPieces, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                                        .addComponent(jTextFieldPrix)))
                                .addGroup(jPanel7Layout.createSequentialGroup()
                                    .addGap(81, 81, 81)
                                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                            .addComponent(jLabel8)
                                            .addGap(18, 18, 18)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(jPanel7Layout.createSequentialGroup()
                                                    .addComponent(jLabel11)
                                                    .addGap(15, 15, 15)
                                                    .addComponent(jTextFieldIDBiens, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(jPanel7Layout.createSequentialGroup()
                                                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                                            .addComponent(jLabel4)
                                                            .addGap(15, 15, 15))
                                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                                            .addComponent(jLabel13)
                                                            .addGap(18, 18, 18)))
                                                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(jTextFieldIDAgent, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                                                        .addComponent(jTextFieldIDClient1))))
                                            .addGap(3, 3, 3)))))
                            .addGap(9, 9, 9))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7)
                                .addComponent(jLabel9))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextFieldLieu)
                                .addComponent(jTextFieldNomBiens)
                                .addComponent(jComboBoxType, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jCheckBox_Jardin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBox_Cave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBox_Garage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBox_Piscine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBox_Vendu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBox_Annonce, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(8, 8, 8))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addComponent(jButtonAddBiens)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButtonEditBiens)
                            .addGap(11, 11, 11)
                            .addComponent(jButtonSupprBiens, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE))
                        .addComponent(jButtonClearField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(18, 18, 18)))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 811, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(14, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                    .addComponent(jButtonRefreshJTable1, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(84, 84, 84))))
    );
    jPanel7Layout.setVerticalGroup(
        jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldIDBiens, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)
                        .addComponent(jCheckBox_Jardin))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldIDClient1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(jCheckBox_Cave))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addGap(14, 14, 14)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextFieldIDAgent, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel13)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jCheckBox_Garage)))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jTextFieldNomBiens, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCheckBox_Piscine))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jTextFieldLieu, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCheckBox_Vendu))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jComboBoxType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCheckBox_Annonce))
                    .addGap(19, 19, 19)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel9)
                        .addComponent(jTextFieldPrix, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel10)
                        .addComponent(jTextFieldSurface, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(jSpinnerPieces, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel8)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonSupprBiens, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonAddBiens, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonEditBiens, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jButtonClearField1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                .addComponent(jButtonRefreshJTable1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGap(99, 99, 99))
    );

    jPanel6.setBackground(new java.awt.Color(255, 153, 51));

    jLabel3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
    jLabel3.setForeground(new java.awt.Color(255, 255, 255));
    jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel3.setText("Gestion des biens");

    javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
    jPanel6.setLayout(jPanel6Layout);
    jPanel6Layout.setHorizontalGroup(
        jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel6Layout.createSequentialGroup()
            .addGap(581, 581, 581)
            .addComponent(jLabel3)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel6Layout.setVerticalGroup(
        jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel3)
            .addContainerGap())
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 663, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonRefreshJTable1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshJTable1ActionPerformed
        // Rafraichis les données de la BDD dans le tableau
        // On vide d'abord le tableau
        jTableBiens.setModel(new DefaultTableModel(null, new Object[]{"ID", "ID_Vendeur", "ID_Agent", "Nom", "Lieu", "Type", "Description", "Prix", "Surface", "Nb_Pièces", "Jardin", "Garage", "Cave", "Piscine", "Vendu", "Annoncé"}));

        //Puis on le remplis
        biens.fillBiensJTable(jTableBiens);
    }//GEN-LAST:event_jButtonRefreshJTable1ActionPerformed

    private void jButtonClearField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearField1ActionPerformed
        // Enlever le texte présent sur les champs d'entré et réinitialiser les valeurs dans les autres types de champs
        jTextFieldIDBiens.setText("");
        jTextFieldNomBiens.setText("");
        jTextFieldLieu.setText("");
        jTextFieldIDClient1.setText("");
        jTextFieldPrix.setText("");
        jTextFieldSurface.setText("");
        jComboBoxType.setSelectedIndex(0);
        jTextAreaDescriptionBiens.setText("");
        jSpinnerPieces.setValue(1);
        jCheckBox_Jardin.setSelected(false);
        jCheckBox_Garage.setSelected(false);
        jCheckBox_Cave.setSelected(false);
        jCheckBox_Piscine.setSelected(false);
        jCheckBox_Vendu.setSelected(false);
        jCheckBox_Annonce.setSelected(false);
        
    }//GEN-LAST:event_jButtonClearField1ActionPerformed

    private void jButtonSupprBiensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprBiensActionPerformed

        // Supprimer le client sélectionné

        try{
            int id = Integer.valueOf(jTextFieldIDBiens.getText());

            if(biens.supprimerBiens(id)){
                JOptionPane.showMessageDialog(rootPane, "Bien supprimé avec succès", "Suppression Bien", JOptionPane.INFORMATION_MESSAGE);

            }else{
                JOptionPane.showMessageDialog(rootPane, "Le bien n'a pas été supprimé ", "Erreur de suppression Bien", JOptionPane.ERROR_MESSAGE);
            }

        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(rootPane, ex.getMessage() + "Veuillez d'abord entrer l'ID du bien à supprimer", "Erreur ID Bien", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonSupprBiensActionPerformed

    private void jButtonEditBiensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditBiensActionPerformed
        //Modification d'un Bien
        
        //Récupération des 1ères données des champs d'entré
        int id_bien = 0;
        String nom = jTextFieldNomBiens.getText();
        String lieu = jTextFieldLieu.getText();
        int id_vendeur = Integer.valueOf(jTextFieldIDClient1.getText());
        int id_agent = Integer.valueOf(jTextFieldIDAgent.getText());
        String type = (String) jComboBoxType.getSelectedItem();
        double superficie = Double.valueOf(jTextFieldSurface.getText());
        double prix = Double.valueOf(jTextFieldPrix.getText());
        String description = jTextAreaDescriptionBiens.getText();
        int pieces = Integer.valueOf(jSpinnerPieces.getValue().toString());
        boolean jardin = false;
        boolean garage = false;
        boolean cave = false;
        boolean piscine = false;
        boolean vendu = false;
        boolean annonce = false;
        Timestamp updated_at = new java.sql.Timestamp(new java.util.Date().getTime());
        
        //Vérification de la présence d'un jardin/garage/cave/piscine et si le bien est vendu/annoncé ou non
        if(jCheckBox_Jardin.isSelected()) jardin = true;
        if(jCheckBox_Garage.isSelected()) garage = true;
        if(jCheckBox_Cave.isSelected()) cave = true;
        if(jCheckBox_Piscine.isSelected()) piscine = true;
        if(jCheckBox_Vendu.isSelected()) vendu = true;
        if(jCheckBox_Annonce.isSelected()) annonce = true;

        if(nom.trim().equals("") || lieu.trim().equals("") || type.trim().equals("") || jTextFieldIDClient1.getText().trim().equals("") || jTextFieldPrix.getText().trim().equals("") || jTextFieldPrix.getText().trim().equals("") || jTextFieldIDAgent.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Champs requis non remplis (nom, lieu, type, id_vendeur, id_agent, prix, superficie)", "Champs Vides", JOptionPane.WARNING_MESSAGE);
        }else {

            try{
                id_bien = Integer.valueOf(jTextFieldIDBiens.getText());

                if(biens.modifierBiens(id_bien, id_vendeur, id_agent, nom, lieu, type, description, prix, superficie, pieces, jardin, cave, garage, piscine, vendu, annonce, updated_at)){
                    JOptionPane.showMessageDialog(rootPane, "Infos du bien modifiées avec succès", "Modification Biens", JOptionPane.INFORMATION_MESSAGE);

                }else{
                    JOptionPane.showMessageDialog(rootPane, "Erreur dans la modification des infos du bien", "Erreur de modification Biens", JOptionPane.ERROR_MESSAGE);
                }

            }catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(rootPane, ex.getMessage() + "Veuillez d'abord entrer l'ID du bien à modifier", "Erreur ID Biens", JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_jButtonEditBiensActionPerformed

    private void jButtonAddBiensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddBiensActionPerformed
        //Ajout d'un Bien

        //Récupération des 1ères données des champs d'entré
        int id_bien = 0;
        String nom = jTextFieldNomBiens.getText();
        String lieu = jTextFieldLieu.getText();
        int id_vendeur = Integer.valueOf(jTextFieldIDClient1.getText());
        int id_agent = Integer.valueOf(jTextFieldIDAgent.getText());
        String type = (String) jComboBoxType.getSelectedItem();
        double superficie = Double.valueOf(jTextFieldSurface.getText());
        double prix = Double.valueOf(jTextFieldPrix.getText());
        String description = jTextAreaDescriptionBiens.getText();
        int pieces = Integer.valueOf(jSpinnerPieces.getValue().toString());
        boolean jardin = false;
        boolean garage = false;
        boolean cave = false;
        boolean piscine = false;
        boolean vendu = false;
        boolean annonce = false;
        Timestamp created_at = java.sql.Timestamp.from(java.time.Instant.now());
        Timestamp updated_at = java.sql.Timestamp.from(java.time.Instant.now());
        
        //Vérification de la présence d'un jardin/garage/cave/piscine et si le bien est vendu/annoncé ou non
        if(jCheckBox_Jardin.isSelected()) jardin = true;
        if(jCheckBox_Garage.isSelected()) garage = true;
        if(jCheckBox_Cave.isSelected()) cave = true;
        if(jCheckBox_Piscine.isSelected()) piscine = true;
        if(jCheckBox_Vendu.isSelected()) vendu = true;
        if(jCheckBox_Annonce.isSelected()) annonce = true;

        if(nom.trim().equals("") || lieu.trim().equals("") || type.trim().equals("") || jTextFieldIDClient1.getText().trim().equals("") || jTextFieldPrix.getText().trim().equals("") || jTextFieldPrix.getText().trim().equals("") || jTextFieldIDAgent.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Champs requis non remplis (nom, lieu, type, id_vendeur, id_agent, prix, superficie)", "Champs Vides", JOptionPane.WARNING_MESSAGE);
        }else {
            if(biens.addBiens(id_bien, id_vendeur, id_agent, nom, lieu, type, description, prix, superficie, pieces, jardin, cave, garage, piscine, vendu, annonce, created_at, updated_at)){
                JOptionPane.showMessageDialog(rootPane, "Nouveau Bien ajouté avec succès", "Ajout Bien", JOptionPane.INFORMATION_MESSAGE);
                
            }else{
                JOptionPane.showMessageDialog(rootPane, "Erreur dans l'ajout du nouveau bien", "Erreur d'Ajout Bien", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonAddBiensActionPerformed

    private void jTableBiensMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableBiensMouseClicked
        // Afficher les données de la ligne du tableau sélectionnée dans les champs

        // Avoir le model du tableau jTable*
        DefaultTableModel model = (DefaultTableModel)jTableBiens.getModel();

        int rIndex = jTableBiens.getSelectedRow();

        //Afficher les valeurs des zones de textes
        jTextFieldIDBiens.setText(model.getValueAt(rIndex, 0).toString());
        jTextFieldIDClient1.setText(model.getValueAt(rIndex, 1).toString());
        jTextFieldIDAgent.setText(model.getValueAt(rIndex, 2).toString());
        jTextFieldNomBiens.setText(model.getValueAt(rIndex, 3).toString());
        jTextFieldLieu.setText(model.getValueAt(rIndex, 4).toString());
        jTextFieldPrix.setText(model.getValueAt(rIndex, 7).toString());
        jTextFieldSurface.setText(model.getValueAt(rIndex, 8).toString());
        jTextAreaDescriptionBiens.setText(model.getValueAt(rIndex, 6).toString());
        
        //Afficher la valeur du type de bien
        jComboBoxType.setSelectedItem(model.getValueAt(rIndex, 5));
        
        //Afficher la valeur du Nb de pièces du bien
        jSpinnerPieces.setValue(model.getValueAt(rIndex, 9));
        
        //Vérifier si les biens ont un jardin/garage/cave/piscine et s'ils sont en vente ou/et annoncés
        String isJardin = model.getValueAt(rIndex, 10).toString();
        if (isJardin == "true")  {
            jCheckBox_Jardin.setSelected(true);
        }else{
            jCheckBox_Jardin.setSelected(false);
        }
        String isGarage = model.getValueAt(rIndex, 11).toString();
        if (isGarage == "true")  {
            jCheckBox_Garage.setSelected(true);
        }else{
            jCheckBox_Garage.setSelected(false);
        }
        String isCave = model.getValueAt(rIndex, 12).toString();
        if (isCave == "true")  {
            jCheckBox_Cave.setSelected(true);
        }else{
            jCheckBox_Cave.setSelected(false);
        }
        String isPiscine = model.getValueAt(rIndex, 13).toString();
        if (isPiscine == "true")  {
            jCheckBox_Piscine.setSelected(true);
        }else{
            jCheckBox_Piscine.setSelected(false);
        }
        String isVendu = model.getValueAt(rIndex, 14).toString();
        if (isVendu == "true")  {
            jCheckBox_Vendu.setSelected(true);
        }else{
            jCheckBox_Vendu.setSelected(false);
        }
        String isAffiche = model.getValueAt(rIndex, 15).toString();
        if (isAffiche == "true")  {
            jCheckBox_Annonce.setSelected(true);
        }else{
            jCheckBox_Annonce.setSelected(false);
        }
        
    }//GEN-LAST:event_jTableBiensMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionBiens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionBiens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionBiens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionBiens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionBiens().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddBiens;
    private javax.swing.JButton jButtonClearField1;
    private javax.swing.JButton jButtonEditBiens;
    private javax.swing.JButton jButtonRefreshJTable1;
    private javax.swing.JButton jButtonSupprBiens;
    private javax.swing.JCheckBox jCheckBox_Annonce;
    private javax.swing.JCheckBox jCheckBox_Cave;
    private javax.swing.JCheckBox jCheckBox_Garage;
    private javax.swing.JCheckBox jCheckBox_Jardin;
    private javax.swing.JCheckBox jCheckBox_Piscine;
    private javax.swing.JCheckBox jCheckBox_Vendu;
    private javax.swing.JComboBox<String> jComboBoxType;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinnerPieces;
    private javax.swing.JTable jTableBiens;
    private javax.swing.JTextArea jTextAreaDescriptionBiens;
    private javax.swing.JTextField jTextFieldIDAgent;
    private javax.swing.JTextField jTextFieldIDBiens;
    private javax.swing.JTextField jTextFieldIDClient1;
    private javax.swing.JTextField jTextFieldLieu;
    private javax.swing.JTextField jTextFieldNomBiens;
    private javax.swing.JTextField jTextFieldPrix;
    private javax.swing.JTextField jTextFieldSurface;
    // End of variables declaration//GEN-END:variables
}
